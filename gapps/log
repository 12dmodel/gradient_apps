Op naive_demosaick_backward.a
Dependencies for d_mosaick 
  .Func blue_0_d_def__ 
  .Func blue_0_d_def___ce 
  .Func chroma_0_d_def__ 
  .Func chroma_0_d_def___ce 
  .Func d_mosaick 
  .Func d_output_im 
  .Func f_mosaick 
  .Func f_mosaick_0_d_def__ 
  .Func f_mosaick_0_d_def___ce 
  .Func f_output_0_d_def__ 
  .Func f_output_0_d_def___ce 
  .Func green_0_d_def__ 
  .Func green_0_d_def___ce 
  .Func h_interp_0_d_def__ 
  .Func h_interp_0_d_def___ce 
  .Func interpolated_green_0_d_def__ 
  .Func interpolated_green_0_d_def___ce 
  .Func lambda_0 
  .Func mosaick_im 
  .Func q_interp_0_d_def__ 
  .Func q_interp_0_d_def___ce 
  .Func red_0_d_def__ 
  .Func red_0_d_def___ce 
  .Func repeat_edge 
  .Func repeat_edge$1 
  .Func repeat_edge$10 
  .Func repeat_edge$2 
  .Func repeat_edge$3 
  .Func repeat_edge$4 
  .Func repeat_edge$5 
  .Func repeat_edge$6 
  .Func repeat_edge$7 
  .Func repeat_edge$8 
  .Func repeat_edge$9 
  .Func v_interp_0_d_def__ 
  .Func v_interp_0_d_def___ce 
blue -1
chroma -1
f_mosaick -1
f_output -1
green -1
h_interp -1
interpolated_green -1
q_interp -1
red -1
v_interp -1
Printing function:d_mosaick
  funcs[31]: d_mosaick
    d_mosaick(x, y) = f_mosaick_0_d_def___ce(x, y)
  funcs[30]: f_mosaick_0_d_def___ce
    f_mosaick_0_d_def___ce(x, y) = select(((((x < (d_output.min.0 + -2)) || (((d_output.min.0 + d_output.extent.0) + 2) <= x)) || (y < (d_output.min.1 + -2))) || (((d_output.min.1 + d_output.extent.1) + 2) <= y)), 0.000000f, repeat_edge$10(x, y))
  funcs[29]: repeat_edge$10
    repeat_edge$10(x, y) = f_mosaick_0_d_def__(max(min(likely(x), ((d_output.min.0 + d_output.extent.0) + 1)), (d_output.min.0 + -2)), max(min(likely(y), ((d_output.min.1 + d_output.extent.1) + 1)), (d_output.min.1 + -2)))
  funcs[28]: f_mosaick_0_d_def__
    f_mosaick_0_d_def__(x, y) = 0.000000f
    update:f_mosaick_0_d_def__(x, y) = (let t19 = ((x % 2) == 0) in (let t21 = ((y % 2) == 1) in (f_mosaick_0_d_def__(x, y) + select(((t19 && t21) || ((((x % 2) == 1) && t21) || (t19 && ((y % 2) == 0)))), 0.000000f, red_0_d_def___ce(x, y)))))
    update:f_mosaick_0_d_def__(x, y) = (let t30 = ((y % 2) == 0) in (let t31 = ((x % 2) == 1) in (f_mosaick_0_d_def__(x, y) + select(((t31 && t30) || ((t31 && ((y % 2) == 1)) || (((x % 2) == 0) && t30))), 0.000000f, blue_0_d_def___ce(x, y)))))
    update:f_mosaick_0_d_def__(x, y) = (f_mosaick_0_d_def__(x, y) + chroma_0_d_def___ce(x, y))
    update:f_mosaick_0_d_def__(x, y) = (f_mosaick_0_d_def__(x, y) + select(((x % 2) == (y % 2)), green_0_d_def___ce(x, y), 0.000000f))
    update:f_mosaick_0_d_def__(x, y) = (f_mosaick_0_d_def__(x, y) + (select((abs((f_mosaick((x + -1), (y + -1)) - f_mosaick((x + -1), (y + 1)))) < abs((f_mosaick(x, y) - f_mosaick((x + -2), y)))), 0.000000f, interpolated_green_0_d_def___ce((x + -1), y))*0.500000f))
    update:f_mosaick_0_d_def__(x, y) = (f_mosaick_0_d_def__(x, y) + (select((abs((f_mosaick((x + 1), (y + -1)) - f_mosaick((x + 1), (y + 1)))) < abs((f_mosaick((x + 2), y) - f_mosaick(x, y)))), 0.000000f, interpolated_green_0_d_def___ce((x + 1), y))*0.500000f))
    update:f_mosaick_0_d_def__(x, y) = (f_mosaick_0_d_def__(x, y) + (select((abs((f_mosaick(x, (y + -2)) - f_mosaick(x, y))) < abs((f_mosaick((x + 1), (y + -1)) - f_mosaick((x + -1), (y + -1))))), interpolated_green_0_d_def___ce(x, (y + -1)), 0.000000f)*0.500000f))
    update:f_mosaick_0_d_def__(x, y) = (f_mosaick_0_d_def__(x, y) + (select((abs((f_mosaick(x, y) - f_mosaick(x, (y + 2)))) < abs((f_mosaick((x + 1), (y + 1)) - f_mosaick((x + -1), (y + 1))))), interpolated_green_0_d_def___ce(x, (y + 1)), 0.000000f)*0.500000f))
  funcs[27]: interpolated_green_0_d_def___ce
    interpolated_green_0_d_def___ce(x, y) = select(((((x < (d_output.min.0 + -1)) || (((d_output.min.0 + d_output.extent.0) + 1) <= x)) || (y < (d_output.min.1 + -1))) || (((d_output.min.1 + d_output.extent.1) + 1) <= y)), 0.000000f, repeat_edge$9(x, y))
  funcs[26]: repeat_edge$9
    repeat_edge$9(x, y) = interpolated_green_0_d_def__(max(min(likely(x), (d_output.min.0 + d_output.extent.0)), (d_output.min.0 + -1)), max(min(likely(y), (d_output.min.1 + d_output.extent.1)), (d_output.min.1 + -1)))
  funcs[25]: interpolated_green_0_d_def__
    interpolated_green_0_d_def__(x, y) = 0.000000f
    update:interpolated_green_0_d_def__(x, y) = (interpolated_green_0_d_def__(x, y) + select(((x % 2) == (y % 2)), 0.000000f, green_0_d_def___ce(x, y)))
  funcs[24]: green_0_d_def___ce
    green_0_d_def___ce(x, y) = select(((((x < (d_output.min.0 + -1)) || (((d_output.min.0 + d_output.extent.0) + 1) <= x)) || (y < (d_output.min.1 + -1))) || (((d_output.min.1 + d_output.extent.1) + 1) <= y)), 0.000000f, repeat_edge$8(x, y))
  funcs[23]: repeat_edge$8
    repeat_edge$8(x, y) = green_0_d_def__(max(min(likely(x), (d_output.min.0 + d_output.extent.0)), (d_output.min.0 + -1)), max(min(likely(y), (d_output.min.1 + d_output.extent.1)), (d_output.min.1 + -1)))
  funcs[22]: green_0_d_def__
    green_0_d_def__(x, y) = 0.000000f
    update:green_0_d_def__(x, y) = (green_0_d_def__(x, y) + select((r33$x == 1), f_output_0_d_def___ce(x, y, r33$x), 0.000000f))
    RDom: (d_output.min.2, d_output.extent.2)
    update:green_0_d_def__(x, y) = (green_0_d_def__(x, y) + v_interp_0_d_def___ce(x, y))
    update:green_0_d_def__(x, y) = (green_0_d_def__(x, y) + q_interp_0_d_def___ce(x, y))
    update:green_0_d_def__(x, y) = (green_0_d_def__(x, y) + h_interp_0_d_def___ce(x, y))
    update:green_0_d_def__(x, y) = (green_0_d_def__(x, y) - chroma_0_d_def___ce(x, y))
  funcs[21]: f_mosaick
    f_mosaick(x, y) = repeat_edge(x, y)
  funcs[20]: chroma_0_d_def___ce
    chroma_0_d_def___ce(x, y) = select(((((x < (d_output.min.0 + -1)) || (((d_output.min.0 + d_output.extent.0) + 1) <= x)) || (y < (d_output.min.1 + -1))) || (((d_output.min.1 + d_output.extent.1) + 1) <= y)), 0.000000f, repeat_edge$7(x, y))
  funcs[19]: repeat_edge$7
    repeat_edge$7(x, y) = chroma_0_d_def__(max(min(likely(x), (d_output.min.0 + d_output.extent.0)), (d_output.min.0 + -1)), max(min(likely(y), (d_output.min.1 + d_output.extent.1)), (d_output.min.1 + -1)))
  funcs[18]: chroma_0_d_def__
    chroma_0_d_def__(x, y) = 0.000000f
    update:chroma_0_d_def__(x, y) = (chroma_0_d_def__(x, y) + (v_interp_0_d_def___ce(x, (y + -1))*0.500000f))
    update:chroma_0_d_def__(x, y) = (chroma_0_d_def__(x, y) + (v_interp_0_d_def___ce(x, (y + 1))*0.500000f))
    update:chroma_0_d_def__(x, y) = (chroma_0_d_def__(x, y) + (q_interp_0_d_def___ce((x + -1), (y + -1))*0.250000f))
    update:chroma_0_d_def__(x, y) = (chroma_0_d_def__(x, y) + (q_interp_0_d_def___ce((x + -1), (y + 1))*0.250000f))
    update:chroma_0_d_def__(x, y) = (chroma_0_d_def__(x, y) + (q_interp_0_d_def___ce((x + 1), (y + -1))*0.250000f))
    update:chroma_0_d_def__(x, y) = (chroma_0_d_def__(x, y) + (q_interp_0_d_def___ce((x + 1), (y + 1))*0.250000f))
    update:chroma_0_d_def__(x, y) = (chroma_0_d_def__(x, y) + (h_interp_0_d_def___ce((x + -1), y)*0.500000f))
    update:chroma_0_d_def__(x, y) = (chroma_0_d_def__(x, y) + (h_interp_0_d_def___ce((x + 1), y)*0.500000f))
  funcs[17]: v_interp_0_d_def___ce
    v_interp_0_d_def___ce(x, y) = select(((((x < d_output.min.0) || ((d_output.min.0 + d_output.extent.0) <= x)) || (y < d_output.min.1)) || ((d_output.min.1 + d_output.extent.1) <= y)), 0.000000f, repeat_edge$4(x, y))
  funcs[16]: repeat_edge$4
    repeat_edge$4(x, y) = v_interp_0_d_def__(max(min(likely(x), ((d_output.min.0 + d_output.extent.0) + -1)), d_output.min.0), max(min(likely(y), ((d_output.min.1 + d_output.extent.1) + -1)), d_output.min.1))
  funcs[15]: v_interp_0_d_def__
    v_interp_0_d_def__(x, y) = 0.000000f
    update:v_interp_0_d_def__(x, y) = (v_interp_0_d_def__(x, y) + select(((((x % 2) == 1) && ((y % 2) == 1)) && !(((x % 2) == 0) && ((y % 2) == 0))), red_0_d_def___ce(x, y), 0.000000f))
    update:v_interp_0_d_def__(x, y) = (v_interp_0_d_def__(x, y) + select((((x % 2) == 0) && ((y % 2) == 0)), blue_0_d_def___ce(x, y), 0.000000f))
  funcs[14]: q_interp_0_d_def___ce
    q_interp_0_d_def___ce(x, y) = select(((((x < d_output.min.0) || ((d_output.min.0 + d_output.extent.0) <= x)) || (y < d_output.min.1)) || ((d_output.min.1 + d_output.extent.1) <= y)), 0.000000f, repeat_edge$5(x, y))
  funcs[13]: repeat_edge$5
    repeat_edge$5(x, y) = q_interp_0_d_def__(max(min(likely(x), ((d_output.min.0 + d_output.extent.0) + -1)), d_output.min.0), max(min(likely(y), ((d_output.min.1 + d_output.extent.1) + -1)), d_output.min.1))
  funcs[12]: q_interp_0_d_def__
    q_interp_0_d_def__(x, y) = 0.000000f
    update:q_interp_0_d_def__(x, y) = (let t23 = ((x % 2) == 0) in (let t25 = ((y % 2) == 1) in (q_interp_0_d_def__(x, y) + select(((t23 && t25) && !((((x % 2) == 1) && t25) || (t23 && ((y % 2) == 0)))), red_0_d_def___ce(x, y), 0.000000f))))
    update:q_interp_0_d_def__(x, y) = (let t34 = ((y % 2) == 0) in (let t35 = ((x % 2) == 1) in (q_interp_0_d_def__(x, y) + select(((t35 && t34) && !((t35 && ((y % 2) == 1)) || (((x % 2) == 0) && t34))), blue_0_d_def___ce(x, y), 0.000000f))))
  funcs[11]: h_interp_0_d_def___ce
    h_interp_0_d_def___ce(x, y) = select(((((x < d_output.min.0) || ((d_output.min.0 + d_output.extent.0) <= x)) || (y < d_output.min.1)) || ((d_output.min.1 + d_output.extent.1) <= y)), 0.000000f, repeat_edge$6(x, y))
  funcs[10]: repeat_edge$6
    repeat_edge$6(x, y) = h_interp_0_d_def__(max(min(likely(x), ((d_output.min.0 + d_output.extent.0) + -1)), d_output.min.0), max(min(likely(y), ((d_output.min.1 + d_output.extent.1) + -1)), d_output.min.1))
  funcs[9]: h_interp_0_d_def__
    h_interp_0_d_def__(x, y) = 0.000000f
    update:h_interp_0_d_def__(x, y) = (h_interp_0_d_def__(x, y) + select((((x % 2) == 0) && ((y % 2) == 0)), red_0_d_def___ce(x, y), 0.000000f))
    update:h_interp_0_d_def__(x, y) = (h_interp_0_d_def__(x, y) + select(((((x % 2) == 1) && ((y % 2) == 1)) && !(((x % 2) == 0) && ((y % 2) == 0))), blue_0_d_def___ce(x, y), 0.000000f))
  funcs[8]: red_0_d_def___ce
    red_0_d_def___ce(x, y) = select(((((x < d_output.min.0) || ((d_output.min.0 + d_output.extent.0) <= x)) || (y < d_output.min.1)) || ((d_output.min.1 + d_output.extent.1) <= y)), 0.000000f, repeat_edge$2(x, y))
  funcs[7]: repeat_edge$2
    repeat_edge$2(x, y) = red_0_d_def__(max(min(likely(x), ((d_output.min.0 + d_output.extent.0) + -1)), d_output.min.0), max(min(likely(y), ((d_output.min.1 + d_output.extent.1) + -1)), d_output.min.1))
  funcs[6]: red_0_d_def__
    red_0_d_def__(x, y) = 0.000000f
    update:red_0_d_def__(x, y) = (red_0_d_def__(x, y) + select((r52$x == 0), f_output_0_d_def___ce(x, y, r52$x), 0.000000f))
    RDom: (d_output.min.2, d_output.extent.2)
  funcs[5]: blue_0_d_def___ce
    blue_0_d_def___ce(x, y) = select(((((x < d_output.min.0) || ((d_output.min.0 + d_output.extent.0) <= x)) || (y < d_output.min.1)) || ((d_output.min.1 + d_output.extent.1) <= y)), 0.000000f, repeat_edge$3(x, y))
  funcs[4]: repeat_edge$3
    repeat_edge$3(x, y) = blue_0_d_def__(max(min(likely(x), ((d_output.min.0 + d_output.extent.0) + -1)), d_output.min.0), max(min(likely(y), ((d_output.min.1 + d_output.extent.1) + -1)), d_output.min.1))
  funcs[3]: blue_0_d_def__
    blue_0_d_def__(x, y) = 0.000000f
    update:blue_0_d_def__(x, y) = (blue_0_d_def__(x, y) + select(((r14$x == 1) || (r14$x == 0)), 0.000000f, f_output_0_d_def___ce(x, y, r14$x)))
    RDom: (d_output.min.2, d_output.extent.2)
  funcs[2]: f_output_0_d_def___ce
    f_output_0_d_def___ce(x, y, c) = select(((((((x < d_output.min.0) || ((d_output.min.0 + d_output.extent.0) <= x)) || (y < d_output.min.1)) || ((d_output.min.1 + d_output.extent.1) <= y)) || (c < d_output.min.2)) || ((d_output.min.2 + d_output.extent.2) <= c)), 0.000000f, repeat_edge$1(x, y, c))
  funcs[1]: repeat_edge$1
    repeat_edge$1(x, y, c) = f_output_0_d_def__(max(min(likely(x), ((d_output.min.0 + d_output.extent.0) + -1)), d_output.min.0), max(min(likely(y), ((d_output.min.1 + d_output.extent.1) + -1)), d_output.min.1), max(min(likely(c), ((d_output.min.2 + d_output.extent.2) + -1)), d_output.min.2))
  funcs[0]: f_output_0_d_def__
    f_output_0_d_def__(x, y, c) = d_output_im(x, y, c)
Python CFFI wrapper
generating /tmp/tmpJJj5lI/_operators.c
setting the current directory to '/tmp/tmpJJj5lI'
running build_ext
building '_operators' extension
creating home
creating home/gharbi
creating home/gharbi/gradient_apps
creating home/gharbi/gradient_apps/gapps
creating home/gharbi/gradient_apps/gapps/build
x86_64-linux-gnu-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -DWITH_CUDA -I/afs/csail.mit.edu/u/g/gharbi/.virtualenvs/default/local/lib/python2.7/site-packages/torch/utils/ffi/../../lib/include -I/afs/csail.mit.edu/u/g/gharbi/.virtualenvs/default/local/lib/python2.7/site-packages/torch/utils/ffi/../../lib/include/TH -I/afs/csail.mit.edu/u/g/gharbi/.virtualenvs/default/local/lib/python2.7/site-packages/torch/utils/ffi/../../lib/include/THC -I/usr/local/cuda/include -I/home/gharbi/gradient_apps/gapps/build -I/home/gharbi/gradient-halide/include -I/usr/include/python2.7 -c _operators.c -o ./_operators.o -std=c++11
cc1: warning: command line option ‘-std=c++11’ is valid for C++/ObjC++ but not for C [enabled by default]
x86_64-linux-gnu-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -DWITH_CUDA -I/afs/csail.mit.edu/u/g/gharbi/.virtualenvs/default/local/lib/python2.7/site-packages/torch/utils/ffi/../../lib/include -I/afs/csail.mit.edu/u/g/gharbi/.virtualenvs/default/local/lib/python2.7/site-packages/torch/utils/ffi/../../lib/include/TH -I/afs/csail.mit.edu/u/g/gharbi/.virtualenvs/default/local/lib/python2.7/site-packages/torch/utils/ffi/../../lib/include/THC -I/usr/local/cuda/include -I/home/gharbi/gradient_apps/gapps/build -I/home/gharbi/gradient-halide/include -I/usr/include/python2.7 -c /home/gharbi/gradient_apps/gapps/build/naive_demosaick_backward.pytorch.cpp -o ./home/gharbi/gradient_apps/gapps/build/naive_demosaick_backward.pytorch.o -std=c++11
cc1plus: warning: command line option ‘-Wstrict-prototypes’ is valid for C/ObjC but not for C++ [enabled by default]
x86_64-linux-gnu-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -DWITH_CUDA -I/afs/csail.mit.edu/u/g/gharbi/.virtualenvs/default/local/lib/python2.7/site-packages/torch/utils/ffi/../../lib/include -I/afs/csail.mit.edu/u/g/gharbi/.virtualenvs/default/local/lib/python2.7/site-packages/torch/utils/ffi/../../lib/include/TH -I/afs/csail.mit.edu/u/g/gharbi/.virtualenvs/default/local/lib/python2.7/site-packages/torch/utils/ffi/../../lib/include/THC -I/usr/local/cuda/include -I/home/gharbi/gradient_apps/gapps/build -I/home/gharbi/gradient-halide/include -I/usr/include/python2.7 -c /home/gharbi/gradient_apps/gapps/build/naive_demosaick_forward.pytorch.cpp -o ./home/gharbi/gradient_apps/gapps/build/naive_demosaick_forward.pytorch.o -std=c++11
cc1plus: warning: command line option ‘-Wstrict-prototypes’ is valid for C/ObjC but not for C++ [enabled by default]
c++ -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -D_FORTIFY_SOURCE=2 -g -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security ./_operators.o ./home/gharbi/gradient_apps/gapps/build/naive_demosaick_backward.pytorch.o ./home/gharbi/gradient_apps/gapps/build/naive_demosaick_forward.pytorch.o /home/gharbi/gradient_apps/gapps/build/naive_demosaick_forward.a /home/gharbi/gradient_apps/gapps/build/naive_demosaick_backward.a -o ./_operators.so
